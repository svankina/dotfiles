#Remap prefix to C-a (Capslock mapped to C)
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# vi key bindings
set -g status-keys vi
setw -g mode-keys vi

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

set -g default-terminal "screen-256color"

# reload source file
bind r source-file ~/.tmux.conf \; display 'RELOADED!'

## Mouse mode on
set -g mouse on
### Toggle mouse on with PREFIX+m
bind m set -g mouse on \; \
       display 'Mouse: ON'

### Toggle mouse off with PREFIX+M
bind M set -g mouse off \; \
       display 'Mouse: OFF'


#Copy tmux paste buffer to CLIPBOARD
bind C-c run "tmux show-buffer | xclip -i -sel clipboard"
##Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind C-v run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

#Powerline
source /home/svankina/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf
set-option -g default-terminal "screen-256color"

#Saner pane splitting
bind-key - split-window -c "#{pane_current_path}"
bind-key _ split-window -p 20 -c "#{pane_current_path}"
bind-key | split-window -h -p 20 -c "#{pane_current_path}"
bind-key \ split-window -h -c "#{pane_current_path}"

set -g history-limit 1000000

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
